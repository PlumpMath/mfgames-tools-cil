<wpf:ResourceDictionary xml:space="preserve" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:ss="urn:shemas-jetbrains-com:settings-storage-xaml" xmlns:wpf="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
	<s:Boolean x:Key="/Default/CodeEditing/GenerateMemberBody/CopyXmlDocumentation/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/CodeInspection/Highlighting/InspectionSeverities/=SuggestUseVarKeywordEverywhere/@EntryIndexedValue">DO_NOT_SHOW</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeCleanup/Profiles/=Full_0020Cleanup/@EntryIndexedValue">&lt;?xml version="1.0" encoding="utf-16"?&gt;&lt;Profile name="Full Cleanup"&gt;&lt;CSArrangeThisQualifier&gt;True&lt;/CSArrangeThisQualifier&gt;&lt;CSRemoveCodeRedundancies&gt;True&lt;/CSRemoveCodeRedundancies&gt;&lt;CSUseAutoProperty&gt;True&lt;/CSUseAutoProperty&gt;&lt;CSMakeFieldReadonly&gt;True&lt;/CSMakeFieldReadonly&gt;&lt;CSUpdateFileHeader&gt;True&lt;/CSUpdateFileHeader&gt;&lt;CSOptimizeUsings&gt;&lt;OptimizeUsings&gt;True&lt;/OptimizeUsings&gt;&lt;EmbraceInRegion&gt;False&lt;/EmbraceInRegion&gt;&lt;RegionName&gt;&lt;/RegionName&gt;&lt;/CSOptimizeUsings&gt;&lt;CSShortenReferences&gt;True&lt;/CSShortenReferences&gt;&lt;CSReformatCode&gt;True&lt;/CSReformatCode&gt;&lt;CSReorderTypeMembers&gt;True&lt;/CSReorderTypeMembers&gt;&lt;/Profile&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CommonFormatter/ALIGNMENT_TAB_FILL_STYLE/@EntryValue">USE_TABS_ONLY</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_LINQ_QUERY/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTILINE_ARGUMENT/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTILINE_CALLS_CHAIN/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTILINE_EXPRESSION/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTILINE_EXTENDS_LIST/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTILINE_FOR_STMT/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTILINE_PARAMETER/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTIPLE_DECLARATION/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTLINE_TYPE_PARAMETER_CONSTRAINS/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTLINE_TYPE_PARAMETER_LIST/@EntryValue">False</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ANONYMOUS_METHOD_DECLARATION_BRACES/@EntryValue">NEXT_LINE</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/CASE_BLOCK_BRACES/@EntryValue">NEXT_LINE</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/FORCE_ATTRIBUTE_STYLE/@EntryValue">SEPARATE</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/FORCE_FIXED_BRACES_STYLE/@EntryValue">ALWAYS_ADD</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/FORCE_FOR_BRACES_STYLE/@EntryValue">ONLY_FOR_MULTILINE</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/FORCE_FOREACH_BRACES_STYLE/@EntryValue">ONLY_FOR_MULTILINE</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/FORCE_IFELSE_BRACES_STYLE/@EntryValue">ALWAYS_ADD</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/FORCE_USING_BRACES_STYLE/@EntryValue">ONLY_FOR_MULTILINE</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/FORCE_WHILE_BRACES_STYLE/@EntryValue">ALWAYS_ADD</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/INITIALIZER_BRACES/@EntryValue">NEXT_LINE</s:String>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/KEEP_BLANK_LINES_IN_CODE/@EntryValue">1</s:Int64>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/KEEP_BLANK_LINES_IN_DECLARATIONS/@EntryValue">1</s:Int64>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/LINE_FEED_AT_FILE_END/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_CONSTRUCTOR_INITIALIZER_ON_SAME_LINE/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_FIELD_ATTRIBUTE_ON_SAME_LINE/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_SIMPLE_ACCESSOR_ATTRIBUTE_ON_SAME_LINE/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_TYPE_CONSTRAINTS_ON_SAME_LINE/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_WHILE_ON_NEW_LINE/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/SPACE_AROUND_MULTIPLICATIVE_OP/@EntryValue">True</s:Boolean>
	
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/SPACE_BEFORE_EXTENDS_COLON/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/SPACE_BEFORE_TYPE_PARAMETER_CONSTRAINT_COLON/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/STICK_COMMENT/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_AFTER_DECLARATION_LPAR/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_AFTER_INVOCATION_LPAR/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_ARGUMENTS_STYLE/@EntryValue">CHOP_IF_LONG</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_BEFORE_BINARY_OPSIGN/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_BEFORE_EXTENDS_COLON/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_EXTENDS_LIST_STYLE/@EntryValue">CHOP_IF_LONG</s:String>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_LIMIT/@EntryValue">80</s:Int64>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_PARAMETERS_STYLE/@EntryValue">CHOP_IF_LONG</s:String>
	<s:String x:Key="/Default/CodeStyle/CSharpMemberOrderPattern/CustomPattern/@EntryValue">&lt;?xml version="1.0" encoding="utf-8" ?&gt;&#xD;
&lt;Patterns xmlns="urn:shemas-jetbrains-com:member-reordering-patterns"&gt;&#xD;
	&lt;!-- COM Interfaces and StructLayout structs --&gt;&#xD;
	&lt;Pattern&gt;&#xD;
		&lt;Match&gt;&#xD;
			&lt;Or Weight="100"&gt;&#xD;
				&lt;And&gt;&#xD;
					&lt;Kind Is="interface"/&gt;&#xD;
					&lt;Or&gt;&#xD;
						&lt;HasAttribute CLRName="System.Runtime.InteropServices.InterfaceTypeAttribute"/&gt;&#xD;
						&lt;HasAttribute CLRName="System.Runtime.InteropServices.ComImport"/&gt;&#xD;
					&lt;/Or&gt;&#xD;
				&lt;/And&gt;&#xD;
				&lt;HasAttribute CLRName="System.Runtime.InteropServices.StructLayoutAttribute"/&gt;&#xD;
			&lt;/Or&gt;&#xD;
		&lt;/Match&gt;&#xD;
	&lt;/Pattern&gt;&#xD;
&#xD;
	&lt;!-- NUnit Tests --&gt;&#xD;
	&lt;Pattern&gt;&#xD;
		&lt;!-- Only match text fixtures --&gt;&#xD;
		&lt;Match&gt;&#xD;
			&lt;And Weight="100"&gt;&#xD;
				&lt;Kind Is="class"/&gt;&#xD;
				&lt;HasAttribute CLRName="NUnit.Framework.TestFixtureAttribute" Inherit="true"/&gt;&#xD;
			&lt;/And&gt;&#xD;
		&lt;/Match&gt;&#xD;
&#xD;
		&lt;!--Setup/Teardow--&gt;&#xD;
		&lt;Entry&gt;&#xD;
			&lt;Match&gt;&#xD;
				&lt;And&gt;&#xD;
					&lt;Kind Is="method"/&gt;&#xD;
					&lt;Or&gt;&#xD;
						&lt;HasAttribute CLRName="NUnit.Framework.SetUpAttribute" Inherit="true"/&gt;&#xD;
						&lt;HasAttribute CLRName="NUnit.Framework.TearDownAttribute" Inherit="true"/&gt;&#xD;
						&lt;HasAttribute CLRName="NUnit.Framework.FixtureSetUpAttribute" Inherit="true"/&gt;&#xD;
						&lt;HasAttribute CLRName="NUnit.Framework.FixtureTearDownAttribute" Inherit="true"/&gt;&#xD;
					&lt;/Or&gt;&#xD;
				&lt;/And&gt;&#xD;
			&lt;/Match&gt;&#xD;
			&lt;Group Region="Setup/Teardown"/&gt;&#xD;
		&lt;/Entry&gt;&#xD;
&#xD;
		&lt;!--Test methods--&gt;&#xD;
		&lt;Entry&gt;&#xD;
			&lt;Match&gt;&#xD;
				&lt;And Weight="100"&gt;&#xD;
					&lt;Kind Is="method"/&gt;&#xD;
					&lt;HasAttribute CLRName="NUnit.Framework.TestAttribute" Inherit="false"/&gt;&#xD;
				&lt;/And&gt;&#xD;
			&lt;/Match&gt;&#xD;
			&lt;Sort&gt;&#xD;
				&lt;Name/&gt;&#xD;
			&lt;/Sort&gt;&#xD;
			&lt;Group Region="Tests" /&gt;&#xD;
		&lt;/Entry&gt;&#xD;
&#xD;
		&lt;!--All other members--&gt;&#xD;
		&lt;Entry&gt;&#xD;
			&lt;Sort&gt;&#xD;
				&lt;Name/&gt;&#xD;
			&lt;/Sort&gt;&#xD;
			&lt;Group Region="Support" /&gt;&#xD;
		&lt;/Entry&gt;&#xD;
	&lt;/Pattern&gt;&#xD;
&#xD;
	&lt;!--Default pattern--&gt;&#xD;
	&lt;Pattern&gt;&#xD;
		&lt;!-- Constructors: Static first, wrapped in region. --&gt;&#xD;
		&lt;Entry&gt;&#xD;
			&lt;Match&gt;&#xD;
				&lt;Kind Is="constructor"/&gt;&#xD;
			&lt;/Match&gt;&#xD;
			&lt;Sort&gt;&#xD;
				&lt;Static/&gt;&#xD;
				&lt;Access/&gt;&#xD;
			&lt;/Sort&gt;&#xD;
			&lt;Group Region="Constructors" /&gt;&#xD;
		&lt;/Entry&gt;&#xD;
&#xD;
		&lt;!-- Destructors: Finalier first, wrapped in region. --&gt;&#xD;
		&lt;Entry&gt;&#xD;
			&lt;Match&gt;&#xD;
				&lt;Or&gt;&#xD;
					&lt;Kind Is="destructor" /&gt;&#xD;
					&lt;Name Is="Dispose"/&gt;&#xD;
				&lt;/Or&gt;&#xD;
			&lt;/Match&gt;&#xD;
			&lt;Sort&gt;&#xD;
				&lt;Static/&gt;&#xD;
				&lt;Access/&gt;&#xD;
			&lt;/Sort&gt;&#xD;
			&lt;Group Region="Destructors" /&gt;&#xD;
		&lt;/Entry&gt;&#xD;
&#xD;
		&lt;!-- Methods --&gt;&#xD;
		&lt;Entry&gt;&#xD;
			&lt;Match&gt;&#xD;
				&lt;Kind Is="method"/&gt;&#xD;
			&lt;/Match&gt;&#xD;
			&lt;Sort&gt;&#xD;
				&lt;Access/&gt;&#xD;
				&lt;Name/&gt;&#xD;
			&lt;/Sort&gt;&#xD;
			&lt;Group Region="Methods" /&gt;&#xD;
		&lt;/Entry&gt;&#xD;
&#xD;
		&lt;!-- Events --&gt;&#xD;
		&lt;Entry&gt;&#xD;
			&lt;Match&gt;&#xD;
				&lt;Or Weight="100"&gt;&#xD;
					&lt;Kind Is="event"/&gt;&#xD;
					&lt;Kind Is="delegate"/&gt;&#xD;
					&lt;HandlesEvent /&gt;&#xD;
				&lt;/Or&gt;&#xD;
			&lt;/Match&gt;&#xD;
			&lt;Sort&gt;&#xD;
				&lt;Access/&gt;&#xD;
				&lt;Name/&gt;&#xD;
			&lt;/Sort&gt;&#xD;
			&lt;Group Region="Events" /&gt;&#xD;
		&lt;/Entry&gt;&#xD;
&#xD;
		&lt;!-- Fields and Properties --&gt;&#xD;
		&lt;Entry&gt;&#xD;
			&lt;Match&gt;&#xD;
				&lt;Or&gt;&#xD;
					&lt;Kind Is="field"/&gt;&#xD;
					&lt;Kind Is="property"/&gt;&#xD;
					&lt;Kind Is="indexer"/&gt;&#xD;
				&lt;/Or&gt;&#xD;
			&lt;/Match&gt;&#xD;
			&lt;Sort&gt;&#xD;
				&lt;Access/&gt;&#xD;
				&lt;Name/&gt;&#xD;
			&lt;/Sort&gt;&#xD;
			&lt;Group Region="Fields and Properties" /&gt;&#xD;
		&lt;/Entry&gt;&#xD;
&#xD;
		&lt;!-- Enumerations --&gt;&#xD;
		&lt;Entry&gt;&#xD;
			&lt;Match&gt;&#xD;
				&lt;Kind Is="enum"/&gt;&#xD;
			&lt;/Match&gt;&#xD;
			&lt;Sort&gt;&#xD;
				&lt;Access/&gt;&#xD;
				&lt;Name/&gt;&#xD;
			&lt;/Sort&gt;&#xD;
			&lt;Group&gt;&#xD;
				&lt;Name Region="Enumerations"/&gt;&#xD;
			&lt;/Group&gt;&#xD;
		&lt;/Entry&gt;&#xD;
&#xD;
		&lt;!-- Everything Else --&gt;&#xD;
		&lt;Entry/&gt;&#xD;
&#xD;
		&lt;!-- Nested Types --&gt;&#xD;
		&lt;Entry&gt;&#xD;
			&lt;Match&gt;&#xD;
				&lt;Kind Is="type"/&gt;&#xD;
			&lt;/Match&gt;&#xD;
			&lt;Sort&gt;&#xD;
				&lt;Access/&gt;&#xD;
				&lt;Name/&gt;&#xD;
			&lt;/Sort&gt;&#xD;
			&lt;Group&gt;&#xD;
				&lt;Name Region="Types"/&gt;&#xD;
			&lt;/Group&gt;&#xD;
		&lt;/Entry&gt;&#xD;
	&lt;/Pattern&gt;&#xD;
&lt;/Patterns&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/CSharpMemberOrderPattern/LayoutType/@EntryValue">CustomLayout</s:String>
	<s:String x:Key="/Default/CodeStyle/FileHeader/FileHeaderText/@EntryValue">MfGames Tools CIL&#xD;
&#xD;
Copyright 2013 Moonfire Games&#xD;
Released under the MIT license&#xD;
http://mfgames.com/mfgames-tools-cil/license</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=PrivateInstanceFields/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="aaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=PrivateStaticFields/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="aaBb" /&gt;</s:String>
	<s:String x:Key="/Default/FilterSettingsManager/CoverageFilterXml/@EntryValue">&lt;data&gt;&lt;IncludeFilters /&gt;&lt;ExcludeFilters /&gt;&lt;/data&gt;</s:String>
	<s:String x:Key="/Default/FilterSettingsManager/AttributeFilterXml/@EntryValue">&lt;data /&gt;</s:String></wpf:ResourceDictionary>